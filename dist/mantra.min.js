'use strict';(function(h) {
  var b = h.Mantra = {j:k || h.Modernizr, q:"mouse", s:"touch", r:"pen", d:"start", c:"move", b:"end"};
  b.l = $(h.document);
  var k = b.j;
  k.addTest("pointerevents", function() {
    return h.navigator.pointerEnabled || h.navigator.msPointerEnabled
  });
  var m = /mobile|tablet|ip(ad|hone|od)|android/i;
  k.addTest("mouseevents", function() {
    return!(k.t && h.navigator.userAgent.match(m))
  });
  b.define = function(a, c) {
    c || (c = {});
    var e = b, d = c.hasOwnProperty("constructor") && "function" == typeof c.constructor ? c.constructor : !1, f = "string" == typeof c.extend ? b.resolve(c.extend) : c.extend;
    if(d) {
      var h = d, d = function() {
        h.apply(this, arguments)
      };
      if(f) {
        var l = function() {
        };
        l.prototype = f.prototype;
        d.prototype = new l;
        d.prototype.constructor = d;
        d.prototype.superconstructor = f;
        d.prototype.superclass = f.prototype
      }
      var f = d.prototype, g;
      for(g in c) {
        c.hasOwnProperty(g) && ("constructor" != g && "statics" != g) && (f[g] = c[g])
      }
      d.prototype.singleton && !d.prototype.hasOwnProperty("abstract") && (d = new d)
    }
    a = a.split(".");
    "Mantra" == a[0] && a.shift();
    g = 0;
    for(f = a.length;g < f;g++) {
      l = a[g], e[l] || (e[l] = g == f - 1 && d ? d : {}), e = e[l]
    }
    if(d = d ? c.statics : c) {
      for(var k in d) {
        d.hasOwnProperty(k) && (e[k] = d[k])
      }
    }
    return e
  };
  b.resolve = function(a) {
    var c = b;
    a = a.split(".");
    "Mantra" == a[0] && a.shift();
    for(var e = 0, d = a.length;e < d && !(c = c[a[e]], !c);e++) {
    }
    return c
  };
  b.relayMethod = function(a, c, e) {
    if(e) {
      a[e] = c[e].bind(c)
    }else {
      for(e in c) {
        c.hasOwnProperty(e) && "function" == typeof c[e] && b.relayMethod(a, c, e)
      }
    }
  };
  b.k = "_mantra";
  b.getStore = function(a) {
    var c = $(a).data(b.k);
    c || ($(a).data(b.k, {}), c = $(a).data(b.k));
    return c
  };
  b.define("Mantra.GestureDetector", {singleton:!0, constructor:function() {
    this.i = this.i.bind(this)
  }, e:!1, i:function(a) {
    a = this.p(a);
    if(a == b.d) {
      if(this.e) {
        return
      }
      this.e = !0
    }else {
      if(a == b.c) {
        if(!this.e) {
          return
        }
      }else {
        if(a == b.b) {
          if(!this.e) {
            return
          }
          this.e = !1
        }
      }
    }
    console.log(2, a)
  }, p:function(a) {
    a = a.type;
    ~b.a[b.d].indexOf(a) ? a = b.d : ~b.a[b.b].indexOf(a) ? a = b.b : ~b.a[b.c].indexOf(a) && (a = b.c);
    return a
  }, statics:{}});
  b.define("Mantra.GestureDispatcher", {singleton:!0, constructor:function() {
    this.o()
  }, f:{}, h:0, o:function() {
    var a = {};
    b.j.touch ? b.j.mouseevents ? (a[b.d] = "touchstart mousedown", a[b.c] = "touchmove mousemove", a[b.b] = "touchend touchcancel mouseup") : (a[b.d] = "touchstart", a[b.c] = "touchmove", a[b.b] = "touchend touchcancel") : (a[b.d] = "mousedown", a[b.c] = "mousemove", a[b.b] = "mouseup");
    b.a = a
  }, register:function(a) {
    a instanceof b.Gesture || ("string" == typeof a && (a = b.resolve(a)), a = new a);
    this.f[a.name] = {gesture:a, g:0}
  }, on:function(a, c, e) {
    if(this.f[a]) {
      c = $(c);
      var d = b.getStore(c);
      (d[a] || (d[a] = [])).push(e);
      this.h++;
      this.f[a].g++;
      1 == (d.g || (d.g = 1)) && this.m(b.a[b.d], c);
      1 == this.h && this.m(b.a[b.c] + " " + b.a[b.b])
    }
  }, off:function(a, c, e) {
    if(this.f[a]) {
      c = $(c);
      var d = b.getStore(c), f;
      f = d[a];
      e = f.indexOf(e);
      -1 < e && (d[a] = f.splice(e, 1), this.h--, this.f[a].g--, a = d.g, a--, a || this.n(b.a[b.d], c), 0 === this.h && this.n(b.a[b.c] + " " + b.a[b.b]))
    }
  }, m:function(a, c) {
    c || (c = b.l);
    c.bind(a, b.GestureDetector.i)
  }, n:function(a, c) {
    c || (c = b.l);
    c.unbind(a, b.GestureDetector.i)
  }, statics:{}});
  b.relayMethod(b, b.GestureDispatcher, "on");
  b.relayMethod(b, b.GestureDispatcher, "off");
  b.relayMethod(b, b.GestureDispatcher, "register");
  b.define("Mantra.Gesture", {singleton:!0, "abstract":!0, name:null, constructor:function() {
    this.name && b.GestureDispatcher.register(this)
  }, statics:{}});
  b.define("Mantra.gestures");
  b.define("Mantra.gestures.Tap", {extend:"Mantra.Gesture", name:"tap", constructor:function() {
    this.superconstructor.apply(this)
  }})
}).call(this, window);

