'use strict';var h = null;
(function(g) {
  var b = g.Mantra = {e:m || g.Modernizr};
  b.o = $(g.document);
  var m = b.e;
  m.addTest("pointerevents", function() {
    return g.navigator.pointerEnabled || g.navigator.msPointerEnabled || !1
  });
  var n = /mobile|tablet|ip(ad|hone|od)|android/i;
  m.addTest("mouseevents", function() {
    return!(m.H && g.navigator.userAgent.match(n))
  });
  b.t = [, , "TOUCH", "PEN", "MOUSE"];
  b.u = "mouse";
  b.v = "touch";
  b.D = "pen";
  b.a = "start";
  b.c = "move";
  b.b = "end";
  (function() {
    var a = {};
    b.e.touch ? b.e.mouseevents ? (a[b.a] = "touchstart mousedown", a[b.c] = "touchmove mousemove", a[b.b] = "touchend touchcancel mouseup") : (a[b.a] = "touchstart", a[b.c] = "touchmove", a[b.b] = "touchend touchcancel") : b.e.pointerevents ? (a[b.a] = "pointerdown MSPointerDown", a[b.c] = "pointermove MSPointerMove", a[b.b] = "pointerup pointercancel MSPointerUp MSPointerCancel") : (a[b.a] = "mousedown", a[b.c] = "mousemove", a[b.b] = "mouseup");
    b.d = a
  })();
  b.define = function(a, c) {
    c || (c = {});
    var d = b, e = c.hasOwnProperty("constructor") && "function" == typeof c.constructor ? c.constructor : !1, f = "string" == typeof c.extend ? b.resolve(c.extend) : c.extend;
    if(e) {
      var p = e, e = function() {
        p.apply(this, arguments)
      };
      if(f) {
        var l = function() {
        };
        l.prototype = f.prototype;
        e.prototype = new l;
        e.prototype.constructor = e;
        e.prototype.superconstructor = f;
        e.prototype.superclass = f.prototype
      }
      var f = e.prototype, k;
      for(k in c) {
        c.hasOwnProperty(k) && ("constructor" != k && "statics" != k) && (f[k] = c[k])
      }
      e.prototype.singleton && !e.prototype.hasOwnProperty("abstract") && (e = new e)
    }
    a = a.split(".");
    "Mantra" == a[0] && a.shift();
    k = 0;
    for(f = a.length;k < f;k++) {
      l = a[k], d[l] || (d[l] = k == f - 1 && e ? e : {}), d = d[l]
    }
    if(e = e ? c.statics : c) {
      for(var g in e) {
        e.hasOwnProperty(g) && (d[g] = e[g])
      }
    }
    return d
  };
  b.resolve = function(a) {
    var c = b;
    a = a.split(".");
    "Mantra" == a[0] && a.shift();
    for(var d = 0, e = a.length;d < e && !(c = c[a[d]], !c);d++) {
    }
    return c
  };
  b.relayMethod = function(a, c, d) {
    if(d) {
      a[d] = c[d].bind(c)
    }else {
      for(d in c) {
        c.hasOwnProperty(d) && "function" == typeof c[d] && b.relayMethod(a, c, d)
      }
    }
  };
  b.l = "_mantra";
  b.getStore = function(a) {
    var c = b.hasStore(a);
    c || ($(a).data(b.l, {}), c = $(a).data(b.l));
    return c
  };
  b.hasStore = function(a) {
    return $(a).data(b.l)
  };
  b.define("Mantra.GesturesDispatcher", {singleton:!0, constructor:function() {
    this.k = this.k.bind(this)
  }, g:{}, j:0, register:function(a) {
    a instanceof b.Gesture || ("string" == typeof a && (a = b.resolve(a)), a = new a);
    this.g[a.name] = {gesture:a, s:0}
  }, on:function(a, c, d) {
    if(this.g[a]) {
      c = $(c);
      var e = b.getStore(c);
      e.listeners || (e.listeners = {});
      (e.listeners[a] || (e.listeners[a] = [])).push(d);
      this.j++;
      this.g[a].s++;
      if(1 == (e.count || (e.count = 1))) {
        c[0].style.msTouchAction = "none", this.p(b.d[b.a], c)
      }
      1 == this.j && this.p(b.d[b.c] + " " + b.d[b.b])
    }
  }, off:function(a, c, d) {
    if(this.g[a]) {
      c = $(c);
      var e = b.getStore(c), f;
      f = e.listeners[a];
      d = f.indexOf(d);
      -1 < d && (e[a] = f.splice(d, 1), this.j--, this.g[a].s--, a = e.listeners.count, a--, a || (c[0].style.msTouchAction = h, this.r(b.d[b.a], c)), 0 === this.j && this.r(b.d[b.c] + " " + b.d[b.b]))
    }
  }, p:function(a, c) {
    c || (c = b.o);
    c.on(a, this.k)
  }, r:function(a, c) {
    c || (c = b.o);
    c.off(a, this.k)
  }, m:function(a) {
    for(var c, d = 0, e = a.changedFingers.length;d < e;d++) {
      c = a.changedFingers[d];
      for(var f = c.firstTarget;f;) {
        var g = $(f);
        if((g = b.hasStore(g)) && g.listeners) {
          for(var l in g.listeners) {
            if(g.listeners.hasOwnProperty(l)) {
              var k = this.g[l].gesture;
              a.fingers = g.fingers;
              k.process(c, a)
            }
          }
        }
        f = f.parentNode
      }
    }
  }, h:!1, k:function(a) {
    if(!a.originalEvent._mantraHandled) {
      a.originalEvent._mantraHandled = !0;
      a.preventDefault();
      a = this.w(a);
      var c = a.type, d = a.input;
      this.h && this.h != d || !this.h && c != b.a || (this.B(a), c == b.a ? (this.h = d, this.m(a)) : c == b.c ? this.m(a) : c == b.b && (this.i.length || (this.h = !1), this.m(a)))
    }
  }, w:function(a) {
    a.C && (a = a.C);
    a = {originalEvent:a, changedFingers:[]};
    a.type = this.A(a);
    a.input = this.z(a);
    return a
  }, z:function(a) {
    a = a.originalEvent;
    b.e.pointerevents ? a = b["POINTER_" + b.t[a.pointerType]] : (a = a.type, a = 0 == a.indexOf("touch") ? b.v : b.u);
    return a
  }, A:function(a) {
    a = a.originalEvent;
    a = a.type;
    ~b.d[b.a].indexOf(a) ? a = b.a : ~b.d[b.b].indexOf(a) ? a = b.b : ~b.d[b.c].indexOf(a) && (a = b.c);
    return a
  }, i:[], f:{}, B:function(a) {
    var c = a.originalEvent;
    if(b.e.pointerevents) {
      this.n(c.pointerId, a, c)
    }else {
      if(c.changedTouches) {
        for(var d = 0, e = c.changedTouches.length;d < e;d++) {
          var f = c.changedTouches[d];
          this.n(f.identifier, a, f)
        }
      }else {
        this.n(0, a, c)
      }
    }
  }, n:function(a, c, d) {
    var e, f = c.type;
    switch(f) {
      case b.a:
        if(this.f[a]) {
          e = this.f[a]
        }else {
          e = this.f[a] = new b.Finger(d);
          this.i.push(e);
          for(a = e.firstTarget;a;) {
            d = $(a);
            if(d = b.hasStore(d)) {
              d.fingers || (d.fingers = []), d.fingers.push(e)
            }
            a = a.parentNode
          }
        }
        break;
      case b.c:
        e = this.f[a];
        e.update(d, f);
        break;
      case b.b:
        e = this.f[a];
        this.i.splice(this.i.indexOf(e), 1);
        delete this.f[a];
        e.update(d, f);
        for(a = e.firstTarget;a;) {
          d = $(a), (d = b.hasStore(d)) && d.fingers.splice(d.fingers.indexOf(e), 1), a = a.parentNode
        }
    }
    -1 == c.changedFingers.indexOf(e) && c.changedFingers.push(e)
  }, statics:{}});
  b.relayMethod(b, b.GesturesDispatcher, "on");
  b.relayMethod(b, b.GesturesDispatcher, "off");
  b.relayMethod(b, b.GesturesDispatcher, "register");
  b.define("Mantra.Gesture", {singleton:!0, "abstract":!0, name:h, constructor:function() {
    this.name && b.GesturesDispatcher.register(this)
  }, process:function() {
    return!1
  }, statics:{}});
  b.define("Mantra.Finger", {constructor:function(a) {
    this.phase = "start";
    this.states = [];
    this.q(a, this);
    this.firstTarget = a.target
  }, identifier:h, clientX:h, clientY:h, pageX:h, pageY:h, screenX:h, screenY:h, target:h, phase:h, firstTarget:h, states:h, update:function(a, b) {
    this.phase = b;
    this.states.push(this.q(this))
  }, q:function(a, b) {
    var d = b || {};
    a || (a = this);
    d.identifier = "identifier" in a ? a.identifier : a.pointerId || 0;
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.pageX = a.pageX;
    d.pageY = a.pageY;
    d.screenX = a.screenX;
    d.screenY = a.screenY;
    d.target = a.target;
    return d
  }, statics:{}});
  b.define("Mantra.gestures");
  b.define("Mantra.gestures.Tap", {extend:"Mantra.Gesture", name:"tap", constructor:function() {
    this.superconstructor.apply(this)
  }, process:function(a, b) {
    oldc.log(a, b.G, b.F)
  }})
}).call(this, window);

