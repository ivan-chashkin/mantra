'use strict';(function(a) {
  var d = a.Mantra = {};
  d.l = a.document;
  d.define = function(g, b) {
    var a = d, c = b.hasOwnProperty("constructor") && "function" == typeof b.constructor ? b.constructor : !1, f = "string" == typeof b.extend ? d.resolve(b.extend) : b.extend;
    if(c) {
      var m = c, c = function() {
        m.apply(this, arguments)
      };
      if(f) {
        var h = function() {
        };
        h.prototype = f.prototype;
        c.prototype = new h;
        c.prototype.constructor = c;
        c.prototype.k = f;
        c.prototype.j = f.prototype
      }
      var f = c.prototype, e;
      for(e in b) {
        b.hasOwnProperty(e) && ("constructor" != e && "statics" != e) && (f[e] = b[e])
      }
    }
    g = g.split(".");
    "Mantra" == g[0] && g.shift();
    e = 0;
    for(f = g.length;e < f;e++) {
      h = g[e], a[h] || (a[h] = e == f - 1 && c ? c : {}), a = a[h]
    }
    if(c = c ? b.i : b) {
      for(var l in c) {
        c.hasOwnProperty(l) && (a[l] = c[l])
      }
    }
    return a
  };
  d.resolve = function(a) {
    var b = d;
    a = a.split(".");
    "Mantra" == a[0] && a.shift();
    for(var k = 0, c = a.length;k < c && !(b = b[a[k]], !b);k++) {
    }
    return b
  };
  d.define("Mantra.gestures", {m:a.navigator.r || a.navigator.msPointerEnabled, c:"ontouchstart" in a, d:/mobile|tablet|ip(ad|hone|od)|android/i, n:this.c && a.navigator.userAgent.match(this.d), o:"mouse", p:"touch", e:"pen"});
  d.define("Mantra.gestures.Dispecher", {constructor:function() {
  }, f:{}, register:function(a, b) {
    this.f[a] = b
  }});
  d.define("Mantra.gestures.Gesture", {constructor:function() {
    this.q = "x";
    this.b = !0;
    console.log("Mantra.gestures.Gesture")
  }, gesture:!0, a:"superprop", i:{staticMethod:function() {
    console.log("staticMethod")
  }, g:function() {
    console.log("_staticMethod")
  }}});
  d.define("Mantra.gestures.Tap", {extend:"Mantra.gestures.Gesture", constructor:function() {
    this.k.apply(this);
    this.a = "this";
    console.log("this.superclass._superprop", this.j.a);
    console.log("this.constructor.prototype._superprop", this.constructor.prototype.a);
    console.log("this._superprop", this.a);
    console.log("this._gesture", this.b);
    this.h = !0;
    console.log("Mantra.gestures.Tap")
  }, a:"_superpropTapProto", tap:!0});
  d.gestures.dispecher = new d.gestures.Dispecher;
  a = new d.gestures.Tap;
  console.log(a.tap, a.h, a.gesture, a.b);
  d.gestures.Gesture.staticMethod();
  d.gestures.Gesture.g();
  console.log(d.gestures.e)
}).call(this, window);

